:Class Consumer
    ⍝ Class encapsulating DKaf.Consumer
    ⎕USING←'Confluent.Kafka,/Users/stefan/work/mybuild/Confluent.Kafka.dll'
    ⎕USING,←⊂',/Users/stefan/work/mybuild/DyKa.dll'
    
    :Field public consumer

    :Field _groupid
    :Field _topic
    :Field _bserv

    :Property groupid
        :Access public
        ∇ r←get
          r←_groupid
        ∇
    :EndProperty

    :Property topic
        :Access public
        ∇ r←get
          r←_topic
        ∇
    :EndProperty

    :Property bootstrap
        :Access public
        ∇ r←get
          r←_bserv
        ∇
    :EndProperty

    ∇ Ctor(type bss groupid topic)
      :Access public
      :Implements constructor
      _bserv ← bss

      :If type=0
        consumer ← ⎕NEW DyKa.StringConsumer(bss groupid topic)
      :Else
        consumer ← ⎕NEW DyKa.Consumer(bss groupid topic)
      :End
    ∇

    ∇ r←Consume timeout 
      :Access public
      consume_result ← consumer.Consume(timeout)

      :If ⎕NULL ≡ consume_result
          r←⍬
      :Else
          r←consume_result.Message.Value
      :EndIf
    ∇
:EndClass
